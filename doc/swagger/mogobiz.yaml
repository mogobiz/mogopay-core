swagger: "2.0"
info:
  title: Mogopay API
  description: Make payment easy with the Mogopay API
  version: "1.0.0"
# the domain of the service
host: api.mogopay.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
#Account Services
  /customer-token:
    get:
      summary: Get a new customer token
      tags:
        - Account
      responses:
        200:
          description: Ok.
          schema:
            type: string
  /merchant-token:
    get:
      summary: Get a new merchant token
      tags:
        - Account
      responses:
        200:
          description: Ok.
          schema:
            type: string
  /check-token-validity:
    get:
      summary: Check token validity
      parameters:
        - name: token
          in: query
          description: Token to be verified.
          required: true
          type: string
          format: uuid
      tags:
        - Account
      responses:
        200:
          description: Ok.
          schema:
            $ref: "#/definitions/account"
        404:
          description: Not found if token is invalid.
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized if user not connected or session expired.
          schema:
            $ref: "#/definitions/error"
  /is-pattern-valid:
    get:
      summary: Check password pattern validity
      description: |
        The merchant may impose some restrictions on the password format allowed for its customers.This service allows to check the password regex validity.
      parameters:
        - name: pattern
          in: query
          description: Pattern as a Java regular expression .
          required: true
          type: string
          format: regex
      tags:
        - Account
      responses:
        200:
          description: true if the pattern is valid, false otherwise.
  /already-exist-email:
    get:
      summary: Check if the email is already used.
      parameters:
        - name: email
          in: query
          description: Email to be checked
          required: true
          type: string
          format: email
        - name: merchant_id
          in: query
          description: Seller id
          required: false
          type: string
          format: uuid
        - name: account_type
          in: query
          description: Account type
          required: true
          type: string
          format: CUSTOMER|MERCHANT
      tags:
        - Account
      responses:
        200:
          description: true if the pattern is valid, false otherwise.
        400:
          description: If customer mail and merchant id not specified.
          schema:
            $ref: "#/definitions/error"
  /is-valid-account-id:
    get:
      summary: Check if the account is valid.
      parameters:
        - name: id
          in: query
          description: Account id
          required: true
          type: string
          format: uuid
      tags:
        - Account
      responses:
        200:
          description: Ok.
          schema:
            type: object
            required:
              - result
            properties:
              result:
                type: boolean
        404:
          description: If account not found.
          schema:
            $ref: "#/definitions/error"
  /update-password:
    get:
      summary: Update account password.
      parameters:
        - name: current_password
          in: query
          description: Account current password
          required: true
          type: string
        - name: new_password
          in: query
          description: New password to be set
          required: true
          type: string
      tags:
        - Account
      responses:
        200:
          description: OK if password is successfully updated.
        400:
          description: Bad Request if password isn't updated.
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized if user not connected or session expired or account not found or merchant not found or password didn't match the pattern.
          schema:
            $ref: "#/definitions/error"
  /generate-new-phone-code:
    get:
      summary: Send code via sms.
      tags:
        - Account
      responses:
        200:
          description: OK if code is successfully generated.
        401:
          description: Unauthorized if user not connected or session expired or phone number not found.
          schema:
            $ref: "#/definitions/error"
  /enroll:
    get:
      summary: Update user phone number.
      parameters:
        - name: lphone
          in: query
          description: New phone number in local format
          required: true
          type: string
          format: int32
        - name: pin_code
          in: query
          description: Secret code
          required: true
          type: string
          format: int32
      tags:
        - Account
      responses:
        200:
          description: OK if phone number is successfully registered.
        401:
          description: Unauthorized if user not connected or session expired or account does not exist.
          schema:
            $ref: "#/definitions/error"
        500:
          description: Unexpected Error.
          schema:
            $ref: "#/definitions/error"
  /generate-new-secret:
    get:
      summary: Generate new secret code.
      tags:
        - Account
      responses:
        200:
          description: OK.
        404:
          description: If account not found.
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized if user not connected or session expired.
          schema:
            $ref: "#/definitions/error"
  /add-credit-card:
    get:
      summary: Add or update credit card.
      parameters:
        - name: card_id
          in: query
          description: Credit card id in case of update
          required: false
          type: string
          format: uuid
        - name: holder
          in: query
          description: Credit card holder name
          required: true
          type: string
        - name: number
          in: query
          description: Credit card number
          required: false
          type: string
          format: int32
        - name: expiry_date
          in: query
          description: Credit card expiration date
          required: true
          type: string
          format: date
        - name: type
          in: query
          description: Credit card type
          required: true
          type: string
          format: CB|VISA|MASTER_CARD|DISCOVER|AMEX|SWITCH|SOLO|OTHER
      tags:
        - Account
      responses:
        200:
          description: OK.
          schema:
            $ref: "#/definitions/creditCard"
        401:
          description: Unauthorized if user not connected or session expired or account not found or credit card not found in case of update.
          schema:
            $ref: "#/definitions/error"
  /delete-credit-card:
    get:
      summary: Remove credit card.
      parameters:
        - name: card_id
          in: query
          description: Id of the credit card to be deleted
          required: true
          type: string
          format: uuid
      tags:
        - Account
      responses:
        200:
          description: OK if card is successfully removed.
        401:
          description: Unauthorized if user not connected or session expired or account not found or credit card not found.
          schema:
            $ref: "#/definitions/error"
  /logout:
    get:
      summary: Signing out.
      tags:
        - Account
      responses:
        200:
          description: Empty response.
  /billing-address:
    get:
      summary: Return the billing address.
      tags:
        - Account
      responses:
        200:
          description: OK.
          schema:
            $ref: "#/definitions/accountAddress"
        404:
          description: If no address found.
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized if user not connected or session expired.
          schema:
            $ref: "#/definitions/error"
  /shipping-addresses:
    get:
      summary: Return a list of all shipping addresses for an account.
      tags:
        - Account
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/shippingAddress"
        401:
          description: Unauthorized if user not connected or session expired.
          schema:
            $ref: "#/definitions/error"
  /shipping-address:
    get:
      summary: Return the current shipping address of an account.
      tags:
        - Account
      responses:
        200:
          description: OK.
          schema:
            $ref: "#/definitions/shippingAddress"
        404:
          description: If no address found.
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized if user not connected or session expired.
          schema:
            $ref: "#/definitions/error"
  /profile-info:
    get:
      summary: Get the user profile info.
      parameters:
        - name: email
          in: query
          description: Requested account email
          required: true
          type: string
          format: email
      tags:
        - Account
      responses:
        200:
          description: OK.
          schema:
            type: object
            properties:
              isMerchant:
                type: boolean
              passwordField:
                type: string
              emailField:
                type: string
              callbackPrefix:
                type: string
              passwordPattern:
                type: string
              cards:
                type: array
                items:
                  $ref: "#/definitions/creditCard"
              countries:
                type: array
                items:
                  $ref: "#/definitions/country"
              cbParam:
                $ref: "#/definitions/cbParam"
              paypalParam:
                $ref: "#/definitions/paypalParam"
              account:
                $ref: "#/definitions/account"
        401:
          description: Unauthorized if user not connected or session expired or account not found.
          schema:
            $ref: "#/definitions/error"
  /assign-billing-address:
    get:
      summary: Change current billing address.
      parameters:
        - name: firstname
          in: query
          description: First name
          required: true
          type: string
        - name: lastname
          in: query
          description: Last name
          required: true
          type: string
        - name: civility
          in: query
          description: Civility
          required: true
          type: string
          format: MR|MRS
        - name: company
          in: query
          description: Company name
          required: false
          type: string
        - name: country
          in: query
          description: Country
          required: true
          type: string
        - name: admin1
          in: query
          description: State
          required: true
          type: string
        - name: admin2
          in: query
          description: Region
          required: true
          type: string
        - name: city
          in: query
          description: City name
          required: true
          type: string
        - name: road
          in: query
          description: Road name
          required: true
          type: string
        - name: road2
          in: query
          description: Supplementary road
          required: false
          type: string
        - name: lphone
          in: query
          description: Phone number in local format
          required: true
          type: string
        - name: zip_code
          in: query
          description: Zip code
          required: true
          type: string
        - name: extra
          in: query
          description: Extra information about the address
          required: false
          type: string
      tags:
        - Account
      responses:
        200:
          description: OK.
        401:
          description: Unauthorized if user not connected or session expired or account not found.
          schema:
            $ref: "#/definitions/error"
  /add-shipping-address:
    get:
      summary: Add a billing address.
      parameters:
        - name: firstname
          in: query
          description: First name
          required: true
          type: string
        - name: lastname
          in: query
          description: Last name
          required: true
          type: string
        - name: civility
          in: query
          description: Civility
          required: true
          type: string
          format: MR|MRS
        - name: company
          in: query
          description: Company name
          required: false
          type: string
        - name: country
          in: query
          description: Country
          required: true
          type: string
        - name: admin1
          in: query
          description: State
          required: true
          type: string
        - name: admin2
          in: query
          description: Region
          required: true
          type: string
        - name: city
          in: query
          description: City name
          required: true
          type: string
        - name: road
          in: query
          description: Road name
          required: true
          type: string
        - name: road2
          in: query
          description: Supplementary road
          required: false
          type: string
        - name: lphone
          in: query
          description: Phone number in local format
          required: true
          type: string
        - name: zip_code
          in: query
          description: Zip code
          required: true
          type: string
        - name: extra
          in: query
          description: Extra information about the address
          required: false
          type: string
      tags:
        - Account
      responses:
        200:
          description: OK.
        401:
          description: Unauthorized if user not connected or session expired or account not found.
          schema:
            $ref: "#/definitions/error"
  /update-shipping-address:
    get:
      summary: Update an existing billing address.
      parameters:
        - name: firstname
          in: query
          description: First name
          required: true
          type: string
        - name: lastname
          in: query
          description: Last name
          required: true
          type: string
        - name: civility
          in: query
          description: Civility
          required: true
          type: string
          format: MR|MRS
        - name: company
          in: query
          description: Company name
          required: false
          type: string
        - name: country
          in: query
          description: Country
          required: true
          type: string
        - name: admin1
          in: query
          description: State
          required: true
          type: string
        - name: admin2
          in: query
          description: Region
          required: true
          type: string
        - name: city
          in: query
          description: City name
          required: true
          type: string
        - name: road
          in: query
          description: Road name
          required: true
          type: string
        - name: road2
          in: query
          description: Supplementary road
          required: false
          type: string
        - name: lphone
          in: query
          description: Phone number in local format
          required: true
          type: string
        - name: zip_code
          in: query
          description: Zip code
          required: true
          type: string
        - name: extra
          in: query
          description: Extra information about the address
          required: false
          type: string
      tags:
        - Account
      responses:
        200:
          description: OK.
        401:
          description: Unauthorized if user not connected or session expired or account not found.
          schema:
            $ref: "#/definitions/error"
  /delete-shipping-address:
    get:
      summary: Delete specified billing address.
      parameters:
        - name: address_id
          in: query
          description: Id of billing address to be deleted
          required: true
          type: string
          format: uuid
      tags:
        - Account
      responses:
        200:
          description: OK.
        401:
          description: Unauthorized if user not connected or session expired.
          schema:
            $ref: "#/definitions/error"
  /active-country-state-shipping:
    get:
      summary: Get the country and state of tha active shipping address.
      tags:
        - Account
      responses:
        200:
          description: OK.
          schema:
            type: object
            properties:
              countryCode:
                type: string
              stateCode:
                type: string
              shippingAddress:
                type: string
        404:
          description: If no result found.
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized if user not connected or session expired or account not found.
          schema:
            $ref: "#/definitions/error"
  /list-compagnies:
    get:
      summary: Get the list of companies.
      tags:
        - Account
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              type: string
        401:
          description: Unauthorized if user not connected or session expired.
          schema:
            $ref: "#/definitions/error"
  /list-merchants:
    get:
      summary: Get the list of all merchants.
      tags:
        - Account
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              type: object
              properties:
                merchant compnay or email:
                  type: string
                merchant uuid:
                  type: string
                  format: uuid
  /select-shipping-address:
    get:
      summary: Update account shipping address.
      parameters:
        - name: address_id
          in: query
          description: Id of the selected address
          required: true
          type: string
          format: uuid
      tags:
        - Account
      responses:
        200:
          description: OK.
        401:
          description: Unauthorized if user not connected or session expired or account not found.
          schema:
            $ref: "#/definitions/error"
  /confirm-signup:
    get:
      summary: Confirm account signing up via token.
      parameters:
        - name: token
          in: query
          description: Secret token send it via email
          required: true
          type: string
      tags:
        - Account
      responses:
        200:
          description: OK.
          schema:
            $ref: "#/definitions/account"
        410:
          description: Token expired.
          schema:
            $ref: "#/definitions/error"
        400:
          description: Invalid token.
          schema:
            $ref: "#/definitions/error"

#Backoffice Tag
  /customers:
    get:
      summary: Get list of all customers.
      parameters:
        - name: page
          in: query
          required: true
          description: Page number to display
          type: string
          format: int32
        - name: max
          in: query
          description: Maximum customers in page
          required: true
          type: string
          format: int32
      tags:
        - Backoffice
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/account"
        401:
          description: Unauthorized if user not connected or connected user isn't a merchant.
          schema:
            $ref: "#/definitions/error"
  /transactions:
    get:
      summary: Get list of all transactions.
      parameters:
        - name: transaction_uuid
          in: query
          required: false
          description: Transaction id
          type: string
          format: uuid
        - name: email
          in: query
          description: Customer email
          required: false
          type: string
          format: email
        - name: transaction_status
          in: query
          required: false
          description: Transaction status
          type: string
        - name: delivery_status
          in: query
          required: false
          description: Delivery status
          type: string
        - name: amount
          in: query
          required: false
          description: Transaction amount
          type: string
          format: float
        - name: start_date
          in: query
          required: false
          description: Transaction start date
          type: string
          format: date
        - name: start_time
          in: query
          required: false
          description: Transaction start time
          type: string
          format: date-time
        - name: end_date
          in: query
          required: false
          description: Transaction end date
          type: string
          format: date
        - name: end_time
          in: query
          required: false
          description: Transaction end time
          type: string
          format: date-time
      tags:
        - Backoffice
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/transaction"
        401:
          description: Unauthorized if user not connected.
          schema:
            $ref: "#/definitions/error"
  /transactions/{transactionId}/logs:
    get:
      summary: Get list of all log for a transaction.
      parameters:
        - name: transactionId
          in: path
          required: true
          description: Transaction id
          type: string
          format: uuid
      tags:
        - Backoffice
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/transactionLog"
  /transaction/{uuid}:
    get:
      summary: Get transaction details.
      parameters:
        - name: uuid
          in: path
          description: Transaction id
          required: true
          type: string
          format: uuid
      tags:
        - Backoffice
      responses:
        200:
          description: OK.
          schema:
            $ref: "#/definitions/transaction"

#Country Tag
  /countries-for-shipping:
    get:
      summary: Get list of all countries we can ship for.
      tags:
        - Country
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/country"
  /countries-for-billing:
    get:
      summary: Get list of all countries we can bill for.
      tags:
        - Country
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/country"
  /country/{code}:
    get:
      summary: Get country by code.
      parameters:
        - name: code
          in: path
          required: true
          description: Country code
          type: string
      tags:
        - Country
      responses:
        200:
          description: OK.
          schema:
            $ref: "#/definitions/country"
  /admins1/{countryCode}:
    get:
      summary: Get country states.
      parameters:
        - name: countryCode
          in: path
          description: Country code
          required: true
          type: string
      tags:
        - Country
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/countryAdmin"
  /admins2/{admin1}:
    get:
      summary: Get state regions.
      parameters:
        - name: admin1
          in: path
          description: State code
          required: true
          type: string
      tags:
        - Country
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/countryAdmin"
  /cities:
    get:
      summary: Get a list of cities.
      parameters:
        - name: country
          in: query
          description: Country code
          required: false
          type: string
        - name: parent_admin1_code
          in: query
          description: State code
          required: false
          type: string
        - name: parent_admin2_code
          in: query
          description: Region code
          required: false
          type: string
        - name: name
          in: query
          description: A part or full city name
          required: false
          type: string
      tags:
        - Country
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/countryAdmin"
  /{countryCode}/check-phone-number/{phone}:
    get:
      summary: Get a list of cities.
      parameters:
        - name: countryCode
          in: path
          description: Country code
          required: true
          type: string
        - name: phone
          in: path
          description: Phone number to be checked
          required: true
          type: string
      tags:
        - Country
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/phoneVerification"
#Rate Tag
  /list:
    get:
      summary: Get list of all rates.
      tags:
        - Rate
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/rate"
  /format:
    get:
      summary: Get formatted rate.
      parameters:
        - name: amout
          in: query
          description: Amount to be formatted
          required: true
          type: integer
          format: int32
        - name: currency
          in: query
          description: Currency in use
          required: true
          type: string
        - name: country
          in: query
          description: Country code
          required: true
          type: string
      tags:
        - Rate
      responses:
        200:
          description: OK.
          schema:
            type: string
#User Tag
  /register:
    get:
      summary: Register a new user.
      parameters:
        - name: callback_success
          in: query
          description: A URL to be called in case of success
          required: true
          type: string
          format: url
        - name: callback_error
          in: query
          description: A URL to be called in case of error
          required: true
          type: string
          format: url
        - name: merchant_id
          in: query
          description: Merchant id owner of the new user
          required: true
          type: string
          format: uuid
        - name: email
          in: query
          description: User email
          required: true
          type: string
          format: email
        - name: password
          in: query
          description: User password
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: OK.
          schema:
            $ref: "#/definitions/registerdUser"
        401:
          description: Unauthorized if account does not exist or not a vendor account or account already exist.
          schema:
            $ref: "#/definitions/error"
#Transaction
  /customer/{uuid}:
    get:
      summary: Get all customer transactions.
      parameters:
        - name: uuid
          in: path
          description: Customer id
          required: true
          type: string
          format: uuid
      tags:
        - Transaction
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/transaction"
  /verify:
    get:
      summary: Verify a transaction.
      parameters:
        - name: merchant_secret
          in: query
          description: Merchant secret code
          required: true
          type: string
          format: uuid
        - name: transaction_amount
          in: query
          description: Transaction amount
          required: false
          type: integer
          format: int64
        - name: transaction_id
          in: query
          description: Transaction id
          required: true
          type: string
          format: uuid
      tags:
        - Transaction
      responses:
        200:
          description: OK.
          schema:
            type: array
            items:
              $ref: "#/definitions/transactionVerfification"
        401:
          description: Unauthorized if transaction not found or invalid merchant account or unexpected amount or too late to verify or payment not confirmed or transaction already confirmed.
          schema:
            $ref: "#/definitions/error"
  /init-group-payment:
    get:
      summary: Initialise a new groupo payment.
      parameters:
        - name: token
          in: query
          description: Secret code
          required: true
          type: string
        - name: transaction_type
          in: query
          description: Transaction type
          required: true
          type: string
        - name: card_type
          in: query
          description: Credit card type
          required: true
          type: string
        - name: card_number
          in: query
          description: Credit card number
          required: true
          type: string
        - name: card_cvv
          in: query
          description: Credit card secret code
          required: true
          type: string
        - name: card_month
          in: query
          description: Credit card expiration month
          required: true
          type: string
        - name: card_year
          in: query
          description: Credit card expiration month
          required: true
          type: string
      tags:
        - Transaction
      responses:
        200:
          description: OK.
          schema:
            type: string
        410:
          description: If token has been expired.
          schema:
            $ref: "#/definitions/error"
        401:
          description: If invalid token or transaction not found or account not found.
          schema:
            $ref: "#/definitions/error"
  /refund:
    get:
      summary: Refund a transaction amount.
      parameters:
        - name: merchant_secret
          in: query
          description: Merchant secret code
          required: true
          type: string
          format: uuid
        - name: amount
          in: query
          description: Amount to be refunded
          required: true
          type: integer
          format: int32
        - name: bo_transaction_uuid
          in: query
          description: Transaction uuid
          required: true
          type: string
          format: uuid
      tags:
        - Transaction
      responses:
        200:
          description: OK.
        400:
          description: If vendor not found or payment config not found or transaction not found or the refund amount is higher than the initial amount or payment already refunded.
          schema:
            $ref: "#/definitions/error"
        404:
          description: If refund not supported or cbProvider refund not found.
          schema:
            $ref: "#/definitions/error"
        400:
          description: If client does not refund items.
          schema:
            $ref: "#/definitions/error"
  /download/{transactionUuid}:
    get:
      summary: Refund a transaction amount.
      parameters:
        - name: transactionUuid
          in: path
          description: Merchant secret code
          required: true
          type: string
          format: uuid
        - name: page
          in: query
          description: Page size
          required: false
          type: string
        - name: langCountry
          in: query
          description: Country language
          required: true
          type: string
      tags:
        - Transaction
      responses:
        200:
          description: OK.
          schema:
            type: file
        401:
          description: Unauthorized if user not connected or session expired or payment not confir yet or transaction not found.
          schema:
            $ref: "#/definitions/error"





definitions:
# General Definitions
  country:
    type: object
    required:
      - uuid
      - code
      - name
      - shipping
      - billing
      - dateCreated
      - lastUpdated
    properties:
      uuid:
        type: string
        format: uuid
      code:
        type: string
      name:
        type: string
      shipping:
        type: boolean
      billing:
        type: boolean
      zipCodeRegex:
        type: string
      currencyCode:
        type: string
      currencyNumericCode:
        type: string
        format: int32
      currencyName:
        type: string
      phoneCode:
        type: string
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date

  countryAdmin:
    type: object
    required:
      - uuid
      - level
      - country
      - dateCreated
      - lastUpdated
    properties:
      uuid:
        type: string
        format: uuid
      code:
        type: string
      name:
        type: string
      level:
        type: integer
        format: int32
      country:
        $ref: "#/definitions/countryRef"
      parentCountryAdmin1:
        $ref: "#/definitions/countryAdminRef"
      parentCountryAdmin2:
        $ref: "#/definitions/countryAdminRef"
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date

  countryRef:
    type: object
    required:
      - uuid
      - code
    properties:
      uuid:
        type: string
        format: uuid
      code:
        type: string

  countryAdminRef:
    type: object
    required:
      - uuid
      - code
    properties:
      uuid:
        type: string
        format: uuid
      code:
        type: string

  phoneVerification:
    type: object
    required:
      - isValid
    properties:
      isValid:
        type: boolean
      nationalFormat:
        type: string
      internationalFormat:
        type: string
      phoneType:
        $ref: "#/definitions/phoneType"


  rate:
    type: object
    required:
      - uuid
      - currencyCode
      - activationDate
      - currencyRate
      - currencyFractionDigits
      - dateCreated
      - lastUpdated
    properties:
      uuid:
        type: string
        format: uuid
      currencyCode:
        type: string
      activationDate:
        type: string
        format: date
      currencyRate:
        type: number
        format: double
      currencyFractionDigits:
        type: integer
        format: int32
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date

  registerdUser:
    type: object
    required:
      - mogopay_token
      - callback_success
      - callback_error
      - merchant_id
      - userEmail
      - userPassword
    properties:
      mogopay_token:
        type: string
      callback_success:
        type: string
        format: url
      callback_error:
        type: string
        format: url
      merchant_id:
        type: string
        format: uuid
      userEmail:
        type: string
        format: email
      userPassword:
        type: string

  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

# Account Definitions
  account:
    type: object
    required:
      - uuid
      - email
      - password
      - status
      - loginFailedCount
      - waitingPhoneSince
      - waitingEmailSince
      - roles
      - shippingAddresses
      - secret
      - creditCards
      - dateCreated
      - lastUpdated
    properties:
      uuid:
        type: string
        format: uuid
      firstName:
        type: string
      lastName:
        type: string
      civility:
        $ref: "#/definitions/civility"
      birthDate:
        type: string
        format: date
      email:
        type: string
        format: email
      password:
        type: string
        format: password
      company:
        type: string
      website:
        type: string
        format: url
      owner:
        type: string
        format: uuid
      secret:
        type: string
        format: uuid
      loginFailedCount:
        type: integer
        format: int32
      waitingPhoneSince:
        type: integer
        format: int64
      waitingEmailSince:
        type: integer
        format: int64
      extra:
        type: string
        format: date
      lastLogin:
        type: string
      emailingToken:
        type: string
      walletId:
        type: string
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date
      address:
        $ref: "#/definitions/accountAddress"
      status:
        $ref: "#/definitions/accountStatus"
      paymentConfig:
        $ref: "#/definitions/paymentConfig"
      roles:
        type: array
        items:
          $ref: "#/definitions/roles"
      shippingAddresses:
        type: array
        items:
          $ref: "#/definitions/shippingAddress"
      creditCards:
        type: array
        items:
          $ref: "#/definitions/creditCard"

  shippingAddress:
    type: object
    required:
      - uuid
      - active
      - address
    properties:
      uuid:
        type: string
        format: uuid
      active:
        type: boolean
      address:
        $ref: "#/definitions/accountAddress"

  accountAddress:
    type: object
    required:
      - road
      - city
    properties:
      road:
        type: string
      road2:
        type: string
      city:
        type: string
      zipCode:
        type: string
        format: int32
      extra:
        type: string
      civility:
        $ref: "#/definitions/civility"
      firstName:
        type: string
      lastName:
        type: string
      company:
        type: string
      telephone:
        $ref: "#/definitions/telephone"
      country:
        type: string
      admin1:
        type: string
      admin2:
        type: string
      geoCoordinates:
        type: string

  telephone:
    type: object
    required:
      - phone
      - lphone
      - isoCode
      - status
    properties:
      phone:
        type: string
        format: phone
      lphone:
        type: string
        format: int32
      isoCode:
        type: string
        format: int32
      pinCode3:
        type: string
        format: int32
      status:
        $ref: "#/definitions/telephoneStatus"

  creditCard:
    type: object
    required:
      - uuid
      - number
      - holder
      - expiryDate
      - cardType
      - hiddenNumber
      - account
      - dateCreated
      - lastUpdated
    properties:
      uuid:
        type: string
        format: uuid
      number:
        type: string
      holder:
        type: string
      expiryDate:
        type: string
        format: date
      cardType:
        $ref: "#/definitions/creditCardType"
      hiddenNumber:
        type: string
      account:
        type: string
        format: uuid
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date

#Payment Definitions
  paymentConfig:
    type: object
    required:
      - cbProvider
      - paymentMethod
      - emailField
      - passwordField
      - dateCreated
      - lastUpdated
    properties:
      kwixoParam:
        type: string
      paypalParam:
        type: string
      applePayParam:
        type: string
      cbParam:
        type: string
      cbProvider:
        $ref: "#/definitions/cbProvider"
      paymentMethod:
        $ref: "#/definitions/paymentMethod"
      emailField:
        type: string
      passwordField:
        type: string
      senderName:
        type: string
      senderEmail:
        type: string
      callbackPrefix:
        type: string
      passwordPattern:
        type: string
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date
      pwdEmailContent:
        type: string
      pwdEmailSubject:
        type: string
      groupPaymentInfo:
        $ref: "#/definitions/groupPaymentInfo"

  groupPaymentInfo:
    type: object
    required:
      - returnURLforNextPayers
      - successURL
      - failureURL
    properties:
      returnURLforNextPayers:
        type: string
      successURL:
        type: string
        format: url
      failureURL:
        type: string
        format: url

  cbParam:
    type: object
    properties:
      systempayShopId:
        type: string
      systempayContractNumber:
        type: string
      systempayCertificate:
        type: string

  paypalParam:
    type: object
    properties:
      paypalUser:
        type: string
      paypalPassword:
        type: string
      paypalSignature:
        type: string

#Transaction Definitions
  transaction:
    type: object
    required:
      - uuid
      - transactionUUID
      - groupPaymentRefundPercentage
      - authorizationId
      - amount
      - currency
      - status
      - paymentData
      - merchantConfirmation
      - modifications
      - dateCreated
      - lastUpdated
    properties:
      uuid:
        type: string
        format: uuid
      transactionUUID:
        type: string
        format: uuid
      groupTransactionUUID:
        type: string
        format: uuid
      groupPaymentExpirationDate:
        type: integer
        format: int64
      groupPaymentRefundPercentage:
        type: integer
        format: int32
      authorizationId:
        type: strnig
      transactionDate:
        type: strnig
        format: date
      amount:
        type: integer
        format: int32
      currency:
        $ref: "#/definitions/cartRate"
      status:
        $ref: "#/definitions/transactionStatus"
      endDate:
        type: strnig
        format: date
      paymentData:
        $ref: "#/definitions/paymentData"
      merchantConfirmation:
        type: boolean
      email:
        type: strnig
        format: email
      errorCodeOrigin:
        type: strnig
      errorMessageOrigin:
        type: strnig
      extra:
        type: strnig
      description:
        type: strnig
      gatewayData:
        type: strnig
      creditCard:
        $ref: "#/definitions/creditCard"
      shipping:
        type: strnig
      shippingTrackingNumber:
        type: strnig
      vendor:
        $ref: "#/definitions/account"
      customer:
        $ref: "#/definitions/account"
      modifications:
        type: array
        items:
          $ref: "#/definitions/modificationStatus"
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date

  transactionRequest:
    type: object
    required:
      - uuid
      - tid
      - groupPaymentRefundPercentage
      - amount
      - currency
      - vendor
      - dateCreated
      - lastUpdated
    properties:
      uuid:
        type: string
        format: uuid
      tid:
        type: string
        format: uuid
      groupTransactionUUID:
        type: string
        format: uuid
      groupPaymentExpirationDate:
        type: integer
        format: int64
      groupPaymentRefundPercentage:
        type: integer
        format: int32
      transactionDate:
        type: strnig
        format: date
      currency:
        $ref: "#/definitions/cartRate"
      vendor:
        type: string
        format: uuid
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date

  transactionVerfification:
    type: object
    required:
      - result
      - transaction_id
      - transaction_amount
      - transaction_email
      - transaction_sequence
      - transaction_status
      - transaction_start
      - transaction_end
      - transaction_providerid
      - transaction_type
      - group_transactions
    properties:
      result:
        type: string
        format: success|error
      transaction_id:
        type: string
        format: uuid
      transaction_amount:
        type: string
      transaction_email:
        type: string
        format: email
      transaction_sequence:
        type: string
      transaction_status:
        type: strnig
        format: INITIATED|VERIFICATION_THREEDS|THREEDS_TESTED|PAYMENT_REQUESTED|PAYMENT_CONFIRMED|PAYMENT_REFUSED|CANCEL_REQUESTED|CANCEL_FAILED|CANCEL_CONFIRMED|CUSTOMER_REFUNDED
      transaction_start:
        type: strnig
      transaction_end:
        type: strnig
      transaction_providerid:
        type: string
        format: uuid
      transaction_type:
        type: string
        format: NONE|CREDIT_CARD|PAYPAL
      group_transactions:
        type: array
        items:
          $ref: "#/definitions/transactionRequest"

  paymentData:
    type: object
    required:
      - paymentType
      - cbProvider
    properties:
      paymentType:
        $ref: "#/definitions/paymentType"
      cbProvider:
        $ref: "#/definitions/cbProvider"
      transactionSequence:
        type: string
      orderDate:
        type: string
        format: date
      status3DS:
        $ref: "#/definitions/status3DS"
      transactionId:
        type: string
      authorizationId:
        type: string

  modificationStatus:
    type: object
    required:
      - uuid
      - xdate
      - dateCreated
      - lastUpdated
    properties:
      uuid:
        type: string
        format: uuid
      xdate:
        type: string
        format: date
      ipAddr:
        type: string
      oldStatus:
        $ref: "#/definitions/transactionStatus"
      newStatus:
        $ref: "#/definitions/transactionStatus"
      comment:
        type: string
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date
		
  transactionLog:
    type: object
    required:
      - uuid
      - direction
      - provider
      - transaction
      - step
      - dateCreated
      - lastUpdated
    properties:
      uuid:
        type: string
        format: uuid
      direction:
        type: string
        format: IN|OUT
      provider:
        type: string
        format: NONE|AUTHORIZENET|PAYLINE|PAYBOX|SIPS|SYSTEMPAY
      transaction:
        type: string
        format: uuid
      step:
          $ref: "#/definitions/transactionStep"
      dateCreated:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date

  cartRate:
    type: object
    required:
      - code
      - numericCode
      - rate
      - fractionDigits
    properties:
      code:
        type: string
      numericCode:
        type: integer
        format: int32
      rate:
        type: number
        format: double
      fractionDigits:
        type: integer
        format: int32




# Defined Value Objects
  cbProvider:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: NONE|AUTHORIZENET|PAYLINE|PAYBOX|SIPS|SYSTEMPAY

  paymentMethod:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: EXTERNAL|THREEDS_NO|THREEDS_IF_AVAILABLE|THREEDS_REQUIRED

  civility:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: MR|MRS

  accountStatus:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: ACTIVE|INACTIVE|WAITING_ENROLLMENT

  telephoneStatus:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: ACTIVE|INACTIVE|WAITING_ENROLLMENT

  creditCardType:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: CB|VISA|MASTER_CARD|DISCOVER|AMEX|SWITCH|SOLO|OTHER

  roles:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: ANONYMOUS|ADMINISTRATOR|CUSTOMER|MERCHANT

  paymentType:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: NONE|CREDIT_CARD|PAYPAL

  status3DS:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: APPROVED|REFUSED|INVALID|ERROR

  transactionStatus:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: INITIATED|VERIFICATION_THREEDS|THREEDS_TESTED|PAYMENT_REQUESTED|PAYMENT_CONFIRMED|PAYMENT_REFUSED|CANCEL_REQUESTED|CANCEL_FAILED|CANCEL_CONFIRMED|CUSTOMER_REFUNDED

  transactionStep:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: PAYMENT|FINISH|CANCEL|REFUND|SUBMIT|DONE|CHECK_THREEDS|THREEDS_CALLBACK|SUCCESS|DO_WEB_PAYMENT|GET_WEB_PAYMENT_DETAILS|CALLBACK_PAYMENT|ORDER_THREEDS

  phoneType:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        format: FIXED_LINE|MOBILE|FIXED_LINE_OR_MOBILE|TOLL_FREE|PREMIUM_RATE|SHARED_COST|VOIP|PERSONAL_NUMBER|PAGER|UAN|VOICEMAIL|UNKNOWN
